{"version":3,"file":"component---src-pages-login-tsx-9a1e8ad24c3b81013a81.js","mappings":"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","sources":["webpack://medusa-admin/./src/components/fundamentals/icons/check-circle-icon/index.tsx","webpack://medusa-admin/./src/components/molecules/input-signin/index.tsx","webpack://medusa-admin/./src/components/templates/login-layout.tsx","webpack://medusa-admin/./src/components/organisms/login-card/index.tsx","webpack://medusa-admin/./src/components/organisms/reset-token-card/index.tsx","webpack://medusa-admin/./src/pages/login.tsx"],"sourcesContent":["import React from \"react\"\nimport IconProps from \"../types/icon-type\"\n\nconst CheckCircleIcon: React.FC<IconProps> = ({\n  size = \"24\",\n  color = \"currentColor\",\n  ...attributes\n}) => {\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...attributes}\n    >\n      <path\n        d=\"M10 17.5C14.1422 17.5 17.5 14.1422 17.5 10C17.5 5.85775 14.1422 2.5 10 2.5C5.85775 2.5 2.5 5.85775 2.5 10C2.5 14.1422 5.85775 17.5 10 17.5Z\"\n        stroke={color}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M7.5 9.99998L9.16667 11.6666L12.5 8.33331\"\n        stroke={color}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default CheckCircleIcon\n","import clsx from \"clsx\"\nimport React, {\n  ChangeEventHandler,\n  FocusEventHandler,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\"\nimport EyeIcon from \"../../fundamentals/icons/eye-icon\"\nimport EyeOffIcon from \"../../fundamentals/icons/eye-off-icon\"\nimport LockIcon from \"../../fundamentals/icons/lock-icon\"\n\ntype InputProps = React.InputHTMLAttributes<HTMLInputElement> & {\n  key?: string\n  onChange?: ChangeEventHandler<HTMLInputElement>\n  onFocus?: FocusEventHandler<HTMLInputElement>\n  props?: React.HTMLAttributes<HTMLDivElement>\n}\n\nconst SigninInput = React.forwardRef(\n  (\n    {\n      placeholder,\n      name,\n      key,\n      required,\n      onChange,\n      onFocus,\n      className,\n      type,\n      ...props\n    }: InputProps,\n    ref\n  ) => {\n    const inputRef = useRef(null)\n    const [showPassword, setShowPassword] = useState(false)\n    const [inputType, setInputType] = useState(type)\n\n    useEffect(() => {\n      if (type === \"password\" && showPassword) {\n        setInputType(\"text\")\n      }\n\n      if (type === \"password\" && !showPassword) {\n        setInputType(\"password\")\n      }\n    }, [type, showPassword])\n\n    useImperativeHandle(ref, () => inputRef.current)\n\n    return (\n      <div\n        className={clsx(\n          \"w-[320px] h-[48px] mb-xsmall last:mb-0 border rounded-rounded overflow-hidden\",\n          \"bg-grey-5 inter-base-regular placeholder:text-grey-40\",\n          \"focus-within:shadow-input focus-within:border-violet-60\",\n          \"flex items-center\",\n          {\n            \"pointer-events-none focus-within:shadow-none focus-within:border-none text-grey-40\":\n              props.readOnly,\n          },\n          className\n        )}\n      >\n        {props.readOnly && (\n          <LockIcon size={16} className=\"text-grey-40 ml-base\" />\n        )}\n        <input\n          className={clsx(\n            \"outline-none outline-0 remove-number-spinner leading-base bg-transparent w-full py-3 px-4\",\n            {\n              \"pl-xsmall\": props.readOnly,\n            }\n          )}\n          ref={inputRef}\n          name={name}\n          key={key || name}\n          placeholder={placeholder || \"Placeholder\"}\n          onChange={onChange}\n          onFocus={onFocus}\n          type={inputType}\n          {...props}\n        />\n        {type === \"password\" && (\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            className=\"text-grey-40 px-4 focus:outline-none focus:text-violet-60\"\n          >\n            {showPassword ? <EyeIcon /> : <EyeOffIcon />}\n          </button>\n        )}\n      </div>\n    )\n  }\n)\n\nexport default SigninInput\n","import React from \"react\"\n\nconst LoginLayout = ({ children }) => {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <div className=\"grid grid-cols-1 grid-rows-1 min-h-screen\">\n        <div\n          className=\"flex flex-col items-center\"\n          style={{\n            background: \"linear-gradient(73.29deg, #7C53FF 0%, #F796FF 100%)\",\n          }}\n        >\n          {children}\n          <div className=\"text-grey-0 inter-base-regular pb-12\">\n            Â© Medusa Commerce <span>&#183;</span>{\" \"}\n            <a\n              style={{ color: \"inherit\", textDecoration: \"none\" }}\n              href=\"mailto:hello@medusajs.com\"\n            >\n              Contact\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginLayout\n","import { navigate } from \"gatsby\"\nimport { useAdminLogin } from \"medusa-react\"\nimport React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport Button from \"../../fundamentals/button\"\nimport SigninInput from \"../../molecules/input-signin\"\n\ntype FormValues = {\n  email: string\n  password: string\n}\n\ntype LoginCardProps = {\n  toResetPassword: () => void\n}\n\nconst LoginCard: React.FC<LoginCardProps> = ({ toResetPassword }) => {\n  const [isInvalidLogin, setIsInvalidLogin] = useState(false)\n  const { register, handleSubmit, reset } = useForm<FormValues>()\n  const login = useAdminLogin()\n\n  const onSubmit = (values: FormValues) => {\n    login.mutate(values, {\n      onSuccess: () => {\n        navigate(\"/a/orders\")\n      },\n      onError: () => {\n        setIsInvalidLogin(true)\n        reset()\n      },\n    })\n  }\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"flex flex-col items-center\">\n        <span className=\"inter-2xlarge-semibold mt-4 text-grey-90\">\n          Welcome back!\n        </span>\n        <span className=\"inter-base-regular text-grey-50 mt-2\">\n          It's great to see you ðð¼\n        </span>\n        <span className=\"inter-base-regular text-grey-50 mb-xlarge\">\n          Log in to your account below\n        </span>\n        <SigninInput\n          placeholder=\"Email...\"\n          name=\"email\"\n          ref={register({ required: true })}\n          autoComplete=\"email\"\n        />\n        <SigninInput\n          placeholder=\"Password...\"\n          type={\"password\"}\n          name=\"password\"\n          ref={register({ required: true })}\n          autoComplete=\"current-password\"\n        />\n        {isInvalidLogin && (\n          <span className=\"text-rose-50 w-full mt-2 inter-small-regular\">\n            These credentials do not match our records\n          </span>\n        )}\n        <Button\n          className=\"rounded-rounded mt-4 w-[320px] inter-base-regular\"\n          variant=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          loading={login.isLoading}\n        >\n          Continue\n        </Button>\n        <span\n          className=\"inter-small-regular text-grey-50 mt-8 cursor-pointer\"\n          onClick={toResetPassword}\n        >\n          Reset password\n        </span>\n      </div>\n    </form>\n  )\n}\n\nexport default LoginCard\n","import { useAdminSendResetPasswordToken } from \"medusa-react\"\nimport React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport CheckCircleIcon from \"../../fundamentals/icons/check-circle-icon\"\nimport SigninInput from \"../../molecules/input-signin\"\n\ntype ResetTokenCardProps = {\n  goBack: () => void\n}\n\ntype FormValues = {\n  email: string\n}\n\nconst checkMail = /^\\S+@\\S+$/i\n\nconst ResetTokenCard: React.FC<ResetTokenCardProps> = ({ goBack }) => {\n  const [unrecognizedEmail, setUnrecognizedEmail] = useState(false)\n  const [invalidEmail, setInvalidEmail] = useState(false)\n  const [mailSent, setSentMail] = useState(false)\n  const { register, handleSubmit } = useForm<FormValues>()\n\n  const sendEmail = useAdminSendResetPasswordToken()\n\n  const onSubmit = (values: FormValues) => {\n    if (!checkMail.test(values.email)) {\n      setInvalidEmail(true)\n      return\n    }\n\n    setInvalidEmail(false)\n    setUnrecognizedEmail(false)\n\n    sendEmail.mutate(\n      {\n        email: values.email,\n      },\n      {\n        onSuccess: () => {\n          setSentMail(true)\n        },\n        onError: () => {\n          setUnrecognizedEmail(true)\n        },\n      }\n    )\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"flex flex-col items-center\">\n        <span className=\"inter-2xlarge-semibold mt-base text-grey-90\">\n          Reset your password\n        </span>\n        <span className=\"inter-base-regular text-grey-50 mt-xsmall text-center\">\n          Enter your email address below, and we'll send you\n          <br />\n          instructions on how to reset your password.\n        </span>\n        {!mailSent ? (\n          <>\n            <SigninInput\n              placeholder=\"lebron@james.com...\"\n              name=\"email\"\n              ref={register({ required: true })}\n              className=\"mb-0 mt-xlarge\"\n            />\n            {unrecognizedEmail && (\n              <div className=\"mt-xsmall w-[318px]\">\n                <span className=\"inter-small-regular text-rose-50 text-left\">\n                  We can't find a user with that email address\n                </span>\n              </div>\n            )}\n            {invalidEmail && (\n              <div className=\"mt-xsmall w-[318px]\">\n                <span className=\"inter-small-regular text-rose-50 text-left\">\n                  Not a valid email address\n                </span>\n              </div>\n            )}\n            <button\n              className=\"text-grey-0 w-[320px] h-[48px] border rounded-rounded mt-4 bg-violet-50 inter-base-regular py-3 px-4\"\n              type=\"submit\"\n            >\n              Send reset instructions\n            </button>\n          </>\n        ) : (\n          <div className=\"text-violet-60 rounded-rounded bg-violet-10 p-base flex gap-x-small mt-large\">\n            <div>\n              <CheckCircleIcon size={20} />\n            </div>\n            <div className=\"flex flex-col gap-y-2xsmall\">\n              <span className=\"inter-small-semibold\">\n                Succesfully sent you an email\n              </span>\n              <span className=\"inter-small-regular\">\n                We've sent you an email which you can use to reset your\n                password. Check your spam folder if you haven't received it\n                after a few minutes.\n              </span>\n            </div>\n          </div>\n        )}\n        <span\n          className=\"inter-small-regular text-grey-50 mt-8 cursor-pointer\"\n          onClick={goBack}\n        >\n          Go back to sign in\n        </span>\n      </div>\n    </form>\n  )\n}\n\nexport default ResetTokenCard\n","import clsx from \"clsx\"\nimport React, { useState } from \"react\"\nimport MedusaIcon from \"../components/fundamentals/icons/medusa-icon\"\nimport LoginCard from \"../components/organisms/login-card\"\nimport ResetTokenCard from \"../components/organisms/reset-token-card\"\nimport SEO from \"../components/seo\"\nimport LoginLayout from \"../components/templates/login-layout\"\n\nconst LoginPage = () => {\n  const [resetPassword, setResetPassword] = useState(false)\n\n  return (\n    <LoginLayout>\n      <SEO title=\"Login\" />\n      <div className=\"flex h-full w-full items-center justify-center\">\n        <div\n          className={clsx(\n            \"flex min-h-[600px] w-[640px] bg-grey-0 rounded-rounded justify-center transition-['min-height'] duration-300\",\n            {\n              \"min-h-[480px]\": resetPassword,\n            }\n          )}\n        >\n          <div className=\"flex flex-col pt-12 w-full px-[120px] items-center\">\n            <MedusaIcon />\n            {resetPassword ? (\n              <ResetTokenCard goBack={() => setResetPassword(false)} />\n            ) : (\n              <LoginCard toResetPassword={() => setResetPassword(true)} />\n            )}\n          </div>\n        </div>\n      </div>\n    </LoginLayout>\n  )\n}\n\nexport default LoginPage\n"],"names":["size","color","attributes","React","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SigninInput","ref","placeholder","name","key","onChange","required","onFocus","className","type","props","inputRef","useRef","useState","showPassword","setShowPassword","inputType","setInputType","useEffect","useImperativeHandle","current","clsx","readOnly","LockIcon","onClick","EyeIcon","EyeOffIcon","children","style","background","textDecoration","href","toResetPassword","isInvalidLogin","setIsInvalidLogin","useForm","register","handleSubmit","reset","login","useAdminLogin","onSubmit","values","mutate","onSuccess","navigate","onError","autoComplete","Button","variant","loading","isLoading","checkMail","goBack","unrecognizedEmail","setUnrecognizedEmail","invalidEmail","setInvalidEmail","mailSent","setSentMail","sendEmail","useAdminSendResetPasswordToken","test","email","CheckCircleIcon","resetPassword","setResetPassword","LoginLayout","SEO","title","MedusaIcon","ResetTokenCard","LoginCard"],"sourceRoot":""}